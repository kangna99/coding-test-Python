"""
문제)
당신은 음식점의 계산을 도와주는 점원이다. 카운터에는 거스름돈으로 사용할 500원, 100원, 50원,
10원짜리 동전이 무한히 존재한다고 가정한다. 손님에게 거슬러 줘야 할 돈이 N원일 때 거슬러 줘야 할
동전의 최소 개수를 구하라. 단, 거슬러 줘야 할 돈 N은 항상 10의 배수이다.
"""
change = 1260
count = 0
coin_types = [500, 100, 50, 10]

for coin in coin_types:
    count += change // coin  # 나눠지는 만큼(몫) +count
    change %= coin  # 잔액은 나머지로 업데이트

print(count)

# 문제 분석
# 1. 단 조건이 붙은 이유?
#   최적의 해를 빠르게 구하기 위해서는 가장 큰 화폐 단위부터 돈을 거슬러 주면 되는데
#   이 때, 가장 큰 화폐 단위부터 돈을 거슬러 주는 것이 최적의 해를 보장하는 이유는
#   가지고 있는 동전 중에서 큰 단위가 항상 작은 단위의 배수이므로 작은 단위의 동전들을 종합해
#   다른 해가 나올 수 없기 때문이다.
#   만약, 800원을 거슬러 주어야 하는데 화폐 단위가 500원, 400원, 100원이라면 가장 큰 화폐 단위부터
#   돈을 거슬러 주는 것이 최적의 해가 아닌 것에서 알 수 있다.
#   따라서, 단 조건은 탐욕적 알고리즘이 최적의 해를 보장해주기 위한 장치이다.
#
# 2. 시간복잡도?
#   화폐의 종류가 K라고 할 때, O(K)
#   by for문
#   이 알고리즘의 시간 복잡도는 거슬러줘야 하는 금액과는 무관하며, 동전의 총 종류에만 영향을 받는다.
